(()=>{"use strict";const e=(new Date).getHours();function t(){const e=new Date,t=`${e.getHours()}:${e.getMinutes()}:${e.getSeconds()}`;document.querySelector(".current-time").textContent=t}!function(){const e=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],t=(new Date).getDay(),o=document.querySelector(".today > div"),n=document.querySelector(".tomorrow > div"),r=document.querySelector(".after-tomorrow > div");o.textContent=e[t],n.textContent=e[(t+1)%7],r.textContent=e[(t+2)%7]}(),t(),setInterval(t,1e3),document.querySelector(".back-button").addEventListener("click",(()=>{document.querySelector(".glass-box").style.display="none",document.querySelector(".entry-page").style.display="flex"})),function(){const t=document.querySelector("form");document.querySelector(".search-button").addEventListener("click",(()=>{const o=function(e){const t=document.querySelector(".search-bar").value;return e.addEventListener("submit",(e=>{e.preventDefault()})),document.querySelector(".search-bar").value="",t}(t);!async function(t){document.querySelector(".entry-page").style.display="none",document.querySelector(".glass-box").style.display="block";const o=await async function(e="jaipur"){const t=document.getElementById("loading");t.style.display="block";try{const o=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=1ad1b4fb339f404a89e31257240802&q=${e}&days=3`);if(!o.ok)throw new Error(`Failed to fetch data (${o.status} ${o.statusText})`);const n=await o.json();return t.style.display="none",n}catch(e){throw console.error("Error:",e),e instanceof TypeError||console.error("An unexpected error occurred"),document.querySelector(".container").style.display="none",document.querySelector(".bg-purple").style.display="block",e}}(t);!function(e){document.querySelector(".location").textContent=e.location.name+", "+e.location.region,document.querySelector(".temp").textContent=e.current.temp_c+"°C",document.querySelector(".today-temp").textContent=e.forecast.forecastday[0].day.avgtemp_c+"°C",document.querySelector(".tomorrow-temp").textContent=e.forecast.forecastday[1].day.avgtemp_c+"°C",document.querySelector(".after-tomorrow-temp").textContent=e.forecast.forecastday[2].day.avgtemp_c+"°C",document.querySelector(".current-date").textContent=e.forecast.forecastday[0].date,document.querySelector(".winds-data").textContent=e.forecast.forecastday[0].day.maxwind_kph+" km/h",document.querySelector(".humidity-data").textContent=e.forecast.forecastday[0].day.avghumidity+"%",document.querySelector(".weather-condition").textContent=e.forecast.forecastday[0].day.condition.text,document.querySelector(".today-condition").textContent=e.forecast.forecastday[0].day.condition.text,document.querySelector(".tomorrow-condition").textContent=e.forecast.forecastday[1].day.condition.text,document.querySelector(".after-tomorrow-condition").textContent=e.forecast.forecastday[2].day.condition.text,document.querySelector(".feels-like-temp").textContent="feels like "+e.current.feelslike_c+"°C"}(o),function(t){document.querySelector(".hourly-weather-forecast").innerHTML="";for(let o=0;o<6;o++){const n=document.createElement("div");n.classList.add("weather-forecast-item");const r=document.createElement("div");r.classList.add("time"),r.textContent=e+o+":00";const c=document.createElement("p");c.classList.add("hourly-temp"),c.textContent=t.forecast.forecastday[0].hour[e].temp_c+"°C";const a=document.createElement("p");a.classList.add("condition"),a.textContent=t.forecast.forecastday[0].hour[e].condition.text,n.appendChild(r),n.appendChild(c),n.appendChild(a),document.querySelector(".hourly-weather-forecast").appendChild(n)}}(o)}(o)}))}(),document.querySelector(".btn-go-home").addEventListener("click",(function(){location.reload()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,